version: '3.5'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
    ports:
      - 32181:32181

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CREATE_TOPICS=powerConsumption:1:1
    ports:
      - 9092:9092
    restart: on-failure
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 20s
      timeout: 10s
      retries: 5
      
  pyspark:
    image: jupyter/pyspark-notebook
    #build: ./spark
    container_name: pyspark
    ports:
      - 8888:8888
    volumes:
      - ./dataset:/dataset
    networks:
      - power-consumption-network

  influxdb:
    container_name: influxdb
    image: influxdb:2.4.0-alpine
    restart: always
    volumes:
      - influxdb-data:/var/lib/influxdb2
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_USER_BUCKET=${BUCKET}
      - INFLUXDB_ADMIN_USER=${ADMIN_USERNAME}
      - INFLUXDB_ADMIN_USER_PASSWORD=${ADMIN_PASSWORD}
      - INFLUXDB_ADMIN_USER_TOKEN=${AUTH_TOKEN}

    networks:
      - power-consumption-network

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:9.1.8
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - influxdb
    networks:
      - power-consumption-network

  telegraf:
    container_name: telegraf
    image: telegraf:latest
    restart: always
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - 8125:8125
    networks:
      - power-consumption-network

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    ports:
      - 8080:8080
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=${INFLUXDB_HOST}
      - INFLUXDB_USERNAME={INFLUXDB_ADMIN_USER}
      - INFLUXDB_PASSWORD={INFLUXDB_ADMIN_PASSWORD}
    networks:
      - power-consumption-network

  power-consumption-procuder:
    build:
      context: ./kafka
    depends_on:
      kafka:
        condition: service_healthy
    

networks:
  power-consumption-network:
    driver: bridge

volumes:
  grafana-data:
  influxdb-data:
 


